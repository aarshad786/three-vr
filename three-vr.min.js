!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var f;"undefined"!=typeof window?f=window:"undefined"!=typeof global?f=global:"undefined"!=typeof self&&(f=self),(f.THREE||(f.THREE={})).VR=e()}}(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){var EffectComposer=function(renderer){this.renderer=renderer;this.passes=[];this.reset()};EffectComposer.prototype={swapBuffers:function(){var tmpL=this.readBufferL;this.readBufferL=this.writeBufferL;this.writeBufferL=tmpL;var tmpR=this.readBufferR;this.readBufferR=this.writeBufferR;this.writeBufferR=tmpR},addPass:function(pass){this.passes.push(pass)},popPass:function(){this.passes.pop()},render:function(){var pass,i,il=this.passes.length;for(i=0;i<il;i++){pass=this.passes[i];pass.renderToScreen=i===il-1;pass.render(this.renderer,this.writeBufferL,this.writeBufferR,this.readBufferL,this.readBufferR);this.swapBuffers()}},reset:function(){var width=window.innerWidth/2;var height=window.innerHeight;var parameters={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat,stencilBufferL:false};var renderTarget=new THREE.WebGLRenderTarget(width,height,parameters);this.writeBufferL=renderTarget;this.readBufferL=renderTarget.clone();this.writeBufferR=renderTarget.clone();this.readBufferR=renderTarget.clone()},setSize:function(){this.reset()}};module.exports=EffectComposer},{}],2:[function(require,module,exports){var ShaderPass=function(shader,textureID){this.textureID=textureID!==undefined?textureID:"tDiffuse";this.uniforms=THREE.UniformsUtils.clone(shader.uniforms);this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:shader.vertexShader,fragmentShader:shader.fragmentShader});this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1);this.scene=new THREE.Scene;this.quad=new THREE.Mesh(new THREE.PlaneGeometry(2,2),null);this.scene.add(this.quad)};ShaderPass.prototype={render:function(renderer,writeBufferL,writeBufferR,readBufferL,readBufferR){this.quad.material=this.material;var width=window.innerWidth/2;var height=window.innerHeight;this.uniforms[this.textureID].value=readBufferL;renderer.setViewport(-.1*width,-.1*height,1.16*width,1.2*height);renderer.render(this.scene,this.camera);this.uniforms[this.textureID].value=readBufferR;renderer.setViewport(.95*width,-.1*height,1.16*width,1.2*height);renderer.render(this.scene,this.camera)}};module.exports=ShaderPass},{}],3:[function(require,module,exports){var StereoPass=function(scene,camera){this.scene=scene;this.camera=camera;this.separation=3;this._position=new THREE.Vector3;this._quaternion=new THREE.Quaternion;this._scale=new THREE.Vector3;this._cameraL=new THREE.PerspectiveCamera;this._cameraR=new THREE.PerspectiveCamera};StereoPass.prototype={render:function(renderer,writeBufferL,writeBufferR,readBufferL,readBufferR){var width=window.innerWidth/2;var height=window.innerHeight;this.scene.updateMatrixWorld();if(this.camera.parent===undefined)camera.updateMatrixWorld();this.camera.matrixWorld.decompose(this._position,this._quaternion,this._scale);this._cameraL.fov=this.camera.fov;this._cameraL.aspect=.5*this.camera.aspect;this._cameraL.near=this.camera.near;this._cameraL.far=this.camera.far;this._cameraL.updateProjectionMatrix();this._cameraL.position.copy(this._position);this._cameraL.quaternion.copy(this._quaternion);this._cameraL.translateX(-this.separation);this._cameraR.near=this.camera.near;this._cameraR.far=this.camera.far;this._cameraR.projectionMatrix=this._cameraL.projectionMatrix;this._cameraR.position.copy(this._position);this._cameraR.quaternion.copy(this._quaternion);this._cameraR.translateX(this.separation);if(this.renderToScreen){renderer.setViewport(0,0,width*2,height);renderer.clear();renderer.setViewport(width,0,width,height);renderer.render(this.scene,this._cameraR);renderer.setViewport(0,0,width,height);renderer.render(this.scene,this._cameraL)}else{renderer.setViewport(0,0,width,height);renderer.render(this.scene,this._cameraL,writeBufferL,true);renderer.setViewport(width,0,width,height);renderer.render(this.scene,this._cameraR,writeBufferR,true)}}};module.exports=StereoPass},{}],4:[function(require,module,exports){var DeviceOrientationControls=function(object){this.object=object;this.object.rotation.reorder("YXZ");this.freeze=true;this.movementSpeed=1;this.rollSpeed=.005;this.autoAlign=true;this.autoForward=false;this.alpha=0;this.beta=0;this.gamma=0;this.orient=0;this.alignQuaternion=new THREE.Quaternion;this.orientationQuaternion=new THREE.Quaternion;var quaternion=new THREE.Quaternion;var quaternionLerp=new THREE.Quaternion;var tempVector3=new THREE.Vector3;var tempMatrix4=new THREE.Matrix4;var tempEuler=new THREE.Euler(0,0,0,"YXZ");var tempQuaternion=new THREE.Quaternion;var zee=new THREE.Vector3(0,0,1);var up=new THREE.Vector3(0,1,0);var v0=new THREE.Vector3(0,0,0);var euler=new THREE.Euler;var q0=new THREE.Quaternion;var q1=new THREE.Quaternion(-Math.sqrt(.5),0,0,Math.sqrt(.5));this.deviceOrientation={};this.screenOrientation=window.orientation||0;this.onDeviceOrientationChangeEvent=function(rawEvtData){this.deviceOrientation=rawEvtData}.bind(this);var getOrientation=function(){switch(window.screen.orientation||window.screen.mozOrientation){case"landscape-primary":return 90;case"landscape-secondary":return-90;case"portrait-secondary":return 180;case"portrait-primary":return 0}return window.orientation||0};this.onScreenOrientationChangeEvent=function(){this.screenOrientation=getOrientation()}.bind(this);this.update=function(){return function(){if(this.freeze)return;var orientation=getOrientation();if(orientation!==this.screenOrientation){this.screenOrientation=orientation;this.autoAlign=true}this.alpha=this.deviceOrientation.gamma?THREE.Math.degToRad(this.deviceOrientation.alpha):0;this.beta=this.deviceOrientation.beta?THREE.Math.degToRad(this.deviceOrientation.beta):0;this.gamma=this.deviceOrientation.gamma?THREE.Math.degToRad(this.deviceOrientation.gamma):0;this.orient=this.screenOrientation?THREE.Math.degToRad(this.screenOrientation):0;euler.set(this.beta,this.alpha,-this.gamma,"YXZ");quaternion.setFromEuler(euler);quaternionLerp.slerp(quaternion,.5);if(this.autoAlign)this.orientationQuaternion.copy(quaternion);else this.orientationQuaternion.copy(quaternionLerp);this.orientationQuaternion.multiply(q1);this.orientationQuaternion.multiply(q0.setFromAxisAngle(zee,-this.orient));this.object.quaternion.copy(this.alignQuaternion);this.object.quaternion.multiply(this.orientationQuaternion);if(this.autoForward){tempVector3.set(0,0,-1).applyQuaternion(this.object.quaternion,"ZXY").setLength(this.movementSpeed/50);this.object.position.add(tempVector3)}if(this.autoAlign&&this.alpha!==0){this.autoAlign=false;this.align()}}}();this.align=function(){tempVector3.set(0,0,-1).applyQuaternion(tempQuaternion.copy(this.orientationQuaternion).inverse(),"ZXY");tempEuler.setFromQuaternion(tempQuaternion.setFromRotationMatrix(tempMatrix4.lookAt(tempVector3,v0,up)));tempEuler.set(0,tempEuler.y,0);this.alignQuaternion.setFromEuler(tempEuler)};this.connect=function(){this.onScreenOrientationChangeEvent();window.addEventListener("deviceorientation",this.onDeviceOrientationChangeEvent,false);this.freeze=false;return this};this.disconnect=function(){this.freeze=true;window.removeEventListener("deviceorientation",this.onDeviceOrientationChangeEvent,false)}};module.exports=DeviceOrientationControls},{}],5:[function(require,module,exports){var OrbitControls=function(object,domElement){this.object=object;this.domElement=domElement!==undefined?domElement:document;this.enabled=true;this.target=new THREE.Vector3;this.center=this.target;this.noZoom=false;this.zoomSpeed=1;this.minDistance=0;this.maxDistance=Infinity;this.noRotate=false;this.rotateSpeed=1;this.noPan=false;this.keyPanSpeed=7;this.autoRotate=false;this.autoRotateSpeed=2;this.minPolarAngle=0;this.maxPolarAngle=Math.PI;this.noKeys=false;this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40};var scope=this;var EPS=1e-6;var rotateStart=new THREE.Vector2;var rotateEnd=new THREE.Vector2;var rotateDelta=new THREE.Vector2;var panStart=new THREE.Vector2;var panEnd=new THREE.Vector2;var panDelta=new THREE.Vector2;var panOffset=new THREE.Vector3;var offset=new THREE.Vector3;var dollyStart=new THREE.Vector2;var dollyEnd=new THREE.Vector2;var dollyDelta=new THREE.Vector2;var phiDelta=0;var thetaDelta=0;var scale=1;var pan=new THREE.Vector3;var lastPosition=new THREE.Vector3;var STATE={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_DOLLY:4,TOUCH_PAN:5};var state=STATE.NONE;this.target0=this.target.clone();this.position0=this.object.position.clone();var quat=(new THREE.Quaternion).setFromUnitVectors(object.up,new THREE.Vector3(0,1,0));var quatInverse=quat.clone().inverse();var changeEvent={type:"change"};var startEvent={type:"start"};var endEvent={type:"end"};this.rotateLeft=function(angle){if(angle===undefined){angle=getAutoRotationAngle()}thetaDelta-=angle};this.rotateUp=function(angle){if(angle===undefined){angle=getAutoRotationAngle()}phiDelta-=angle};this.panLeft=function(distance){var te=this.object.matrix.elements;panOffset.set(te[0],te[1],te[2]);panOffset.multiplyScalar(-distance);pan.add(panOffset)};this.panUp=function(distance){var te=this.object.matrix.elements;panOffset.set(te[4],te[5],te[6]);panOffset.multiplyScalar(distance);pan.add(panOffset)};this.pan=function(deltaX,deltaY){var element=scope.domElement===document?scope.domElement.body:scope.domElement;if(scope.object.fov!==undefined){var position=scope.object.position;var offset=position.clone().sub(scope.target);var targetDistance=offset.length();targetDistance*=Math.tan(scope.object.fov/2*Math.PI/180);scope.panLeft(2*deltaX*targetDistance/element.clientHeight);scope.panUp(2*deltaY*targetDistance/element.clientHeight)}else if(scope.object.top!==undefined){scope.panLeft(deltaX*(scope.object.right-scope.object.left)/element.clientWidth);scope.panUp(deltaY*(scope.object.top-scope.object.bottom)/element.clientHeight)}else{console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.")}};this.dollyIn=function(dollyScale){if(dollyScale===undefined){dollyScale=getZoomScale()}scale/=dollyScale};this.dollyOut=function(dollyScale){if(dollyScale===undefined){dollyScale=getZoomScale()}scale*=dollyScale};this.update=function(){var position=this.object.position;offset.copy(position).sub(this.target);offset.applyQuaternion(quat);var theta=Math.atan2(offset.x,offset.z);var phi=Math.atan2(Math.sqrt(offset.x*offset.x+offset.z*offset.z),offset.y);if(this.autoRotate){this.rotateLeft(getAutoRotationAngle())}theta+=thetaDelta;phi+=phiDelta;phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,phi));phi=Math.max(EPS,Math.min(Math.PI-EPS,phi));var radius=offset.length()*scale;radius=Math.max(this.minDistance,Math.min(this.maxDistance,radius));this.target.add(pan);offset.x=radius*Math.sin(phi)*Math.sin(theta);offset.y=radius*Math.cos(phi);offset.z=radius*Math.sin(phi)*Math.cos(theta);offset.applyQuaternion(quatInverse);position.copy(this.target).add(offset);this.object.lookAt(this.target);thetaDelta=0;phiDelta=0;scale=1;pan.set(0,0,0);if(lastPosition.distanceToSquared(this.object.position)>EPS){this.dispatchEvent(changeEvent);lastPosition.copy(this.object.position)}};this.reset=function(){state=STATE.NONE;this.target.copy(this.target0);this.object.position.copy(this.position0);this.update()};function getAutoRotationAngle(){return 2*Math.PI/60/60*scope.autoRotateSpeed}function getZoomScale(){return Math.pow(.95,scope.zoomSpeed)}function onMouseDown(event){if(scope.enabled===false)return;event.preventDefault();if(event.button===0){if(scope.noRotate===true)return;state=STATE.ROTATE;rotateStart.set(event.clientX,event.clientY)}else if(event.button===1){if(scope.noZoom===true)return;state=STATE.DOLLY;dollyStart.set(event.clientX,event.clientY)}else if(event.button===2){if(scope.noPan===true)return;state=STATE.PAN;panStart.set(event.clientX,event.clientY)}scope.domElement.addEventListener("mousemove",onMouseMove,false);scope.domElement.addEventListener("mouseup",onMouseUp,false);scope.dispatchEvent(startEvent)}function onMouseMove(event){if(scope.enabled===false)return;event.preventDefault();var element=scope.domElement===document?scope.domElement.body:scope.domElement;if(state===STATE.ROTATE){if(scope.noRotate===true)return;rotateEnd.set(event.clientX,event.clientY);rotateDelta.subVectors(rotateEnd,rotateStart);scope.rotateLeft(2*Math.PI*rotateDelta.x/element.clientWidth*scope.rotateSpeed);scope.rotateUp(2*Math.PI*rotateDelta.y/element.clientHeight*scope.rotateSpeed);rotateStart.copy(rotateEnd)}else if(state===STATE.DOLLY){if(scope.noZoom===true)return;dollyEnd.set(event.clientX,event.clientY);dollyDelta.subVectors(dollyEnd,dollyStart);if(dollyDelta.y>0){scope.dollyIn()}else{scope.dollyOut()}dollyStart.copy(dollyEnd)}else if(state===STATE.PAN){if(scope.noPan===true)return;panEnd.set(event.clientX,event.clientY);panDelta.subVectors(panEnd,panStart);scope.pan(panDelta.x,panDelta.y);panStart.copy(panEnd)}scope.update()}function onMouseUp(){if(scope.enabled===false)return;scope.domElement.removeEventListener("mousemove",onMouseMove,false);scope.domElement.removeEventListener("mouseup",onMouseUp,false);scope.dispatchEvent(endEvent);state=STATE.NONE}function onMouseWheel(event){if(scope.enabled===false||scope.noZoom===true)return;event.preventDefault();event.stopPropagation();var delta=0;if(event.wheelDelta!==undefined){delta=event.wheelDelta}else if(event.detail!==undefined){delta=-event.detail}if(delta>0){scope.dollyOut()}else{scope.dollyIn()}scope.update();scope.dispatchEvent(startEvent);scope.dispatchEvent(endEvent)}function onKeyDown(event){if(scope.enabled===false||scope.noKeys===true||scope.noPan===true)return;switch(event.keyCode){case scope.keys.UP:scope.pan(0,scope.keyPanSpeed);scope.update();break;case scope.keys.BOTTOM:scope.pan(0,-scope.keyPanSpeed);scope.update();break;case scope.keys.LEFT:scope.pan(scope.keyPanSpeed,0);scope.update();break;case scope.keys.RIGHT:scope.pan(-scope.keyPanSpeed,0);scope.update();break}}function touchstart(event){if(scope.enabled===false)return;switch(event.touches.length){case 1:if(scope.noRotate===true)return;state=STATE.TOUCH_ROTATE;rotateStart.set(event.touches[0].pageX,event.touches[0].pageY);break;case 2:if(scope.noZoom===true)return;state=STATE.TOUCH_DOLLY;var dx=event.touches[0].pageX-event.touches[1].pageX;var dy=event.touches[0].pageY-event.touches[1].pageY;var distance=Math.sqrt(dx*dx+dy*dy);dollyStart.set(0,distance);break;case 3:if(scope.noPan===true)return;state=STATE.TOUCH_PAN;panStart.set(event.touches[0].pageX,event.touches[0].pageY);break;default:state=STATE.NONE}scope.dispatchEvent(startEvent)}function touchmove(event){if(scope.enabled===false)return;event.preventDefault();event.stopPropagation();var element=scope.domElement===document?scope.domElement.body:scope.domElement;switch(event.touches.length){case 1:if(scope.noRotate===true)return;if(state!==STATE.TOUCH_ROTATE)return;rotateEnd.set(event.touches[0].pageX,event.touches[0].pageY);rotateDelta.subVectors(rotateEnd,rotateStart);scope.rotateLeft(2*Math.PI*rotateDelta.x/element.clientWidth*scope.rotateSpeed);scope.rotateUp(2*Math.PI*rotateDelta.y/element.clientHeight*scope.rotateSpeed);rotateStart.copy(rotateEnd);scope.update();break;case 2:if(scope.noZoom===true)return;if(state!==STATE.TOUCH_DOLLY)return;var dx=event.touches[0].pageX-event.touches[1].pageX;var dy=event.touches[0].pageY-event.touches[1].pageY;var distance=Math.sqrt(dx*dx+dy*dy);dollyEnd.set(0,distance);dollyDelta.subVectors(dollyEnd,dollyStart);if(dollyDelta.y>0){scope.dollyOut()}else{scope.dollyIn()}dollyStart.copy(dollyEnd);scope.update();break;case 3:if(scope.noPan===true)return;if(state!==STATE.TOUCH_PAN)return;panEnd.set(event.touches[0].pageX,event.touches[0].pageY);panDelta.subVectors(panEnd,panStart);scope.pan(panDelta.x,panDelta.y);panStart.copy(panEnd);scope.update();break;default:state=STATE.NONE}}function touchend(){if(scope.enabled===false)return;scope.dispatchEvent(endEvent);state=STATE.NONE}this.domElement.addEventListener("contextmenu",function(event){event.preventDefault()},false);this.domElement.addEventListener("mousedown",onMouseDown,false);this.domElement.addEventListener("mousewheel",onMouseWheel,false);this.domElement.addEventListener("DOMMouseScroll",onMouseWheel,false);this.domElement.addEventListener("touchstart",touchstart,false);this.domElement.addEventListener("touchend",touchend,false);this.domElement.addEventListener("touchmove",touchmove,false);window.addEventListener("keydown",onKeyDown,false);this.update()};OrbitControls.prototype=Object.create(THREE.EventDispatcher.prototype);module.exports=OrbitControls},{}],6:[function(require,module,exports){var DeviceOrientationControls=require("./controls/DeviceOrientationControls");var OrbitControls=require("./controls/OrbitControls");var EffectComposer=require("./EffectComposer");var StereoPass=require("./StereoPass");var ShaderPass=require("./ShaderPass");var BarrelDistortsionShader=require("./shaders/BarrelDistortionShader");var DeviceOrientationControls,orbitControls,composer;var threevr={init:function(options){options=options||{};this._setDefault(options,"enableBarrelDistortion",true);this._setDefault(options,"enableDeviceOrientationControls",true);this._setDefault(options,"enableOrbitControls",false);if(options.enableDeviceOrientationControls){deviceOrientationControls=new DeviceOrientationControls(options.camera,true);deviceOrientationControls.connect();deviceOrientationControls.update()}if(options.enableOrbitControls){orbitControls=new OrbitControls(options.camera,options.renderer.domElement);orbitControls.rotateUp(Math.PI/4);orbitControls.target.set(camera.position.x+.1,camera.position.y,camera.position.z);orbitControls.noZoom=true;orbitControls.noPan=true}composer=new EffectComposer(options.renderer);composer.addPass(new StereoPass(options.scene,options.camera));if(options.enableBarrelDistortion){composer.addPass(new ShaderPass(BarrelDistortsionShader))}},animate:function(){if(deviceOrientationControls)deviceOrientationControls.update();if(orbitControls)orbitControls.update();composer.render()},_setDefault:function(obj,key,val){obj[key]=obj[key]?obj[key]:val}};module.exports=threevr},{"./EffectComposer":1,"./ShaderPass":2,"./StereoPass":3,"./controls/DeviceOrientationControls":4,"./controls/OrbitControls":5,"./shaders/BarrelDistortionShader":7}],7:[function(require,module,exports){var BarrelDistortsionShader={uniforms:{tDiffuse:{type:"t",value:null},coefficients:{type:"v3",value:new THREE.Vector3(1,.22,.24)}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform vec3 coefficients;","uniform sampler2D tDiffuse;","varying vec2 vUv;","vec2 distort(vec2 p)","{","float rSq = p.y * p.y + p.x * p.x;","p = p * (coefficients.x + rSq * coefficients.y + rSq * rSq * coefficients.z);","return 0.5 * (p + 1.0);","}","void main() {","vec2 xy = 2.0 * vUv - 1.0;","vec2 uv = distort(xy);","float d = length(uv);","if (!all(equal(clamp(uv, vec2(0.0, 0.0), vec2(1.0, 1.0)), uv))) {","gl_FragColor = vec4(0.0);","} else {","gl_FragColor = texture2D( tDiffuse, uv );","}","}"].join("\n")};module.exports=BarrelDistortsionShader},{}]},{},[6])(6)});